generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int            @id @default(autoincrement())
  createdAT DateTime       @default(now())
  updatedAT DateTime       @updatedAt

  name      String         @unique
  email     String?
  password  String
  active    Boolean        @default(true)

  folders   UserToFolder[]

  @@map("users")
}

model UserToFolder {
  userid   Int
  folderid Int

  folder   Folder @relation(fields: [folderid], references: [id], onDelete: Cascade)
  user     User   @relation(fields: [userid], references: [id], onDelete: Cascade)

  @@id([userid, folderid])
  @@map("userstofolders")
}

model Folder {
  id        Int            @id @default(autoincrement())
  createdAT DateTime       @default(now())
  updatedAT DateTime       @updatedAt

  name      String
  notes     Note[]
  users     UserToFolder[]

  @@map("folders")
}

model Note {
  id          Int      @id @default(autoincrement())
  createdAT   DateTime @default(now())
  updatedAT   DateTime @updatedAt

  title       String
  text        String
  folderid    Int
  
  folder      Folder   @relation(fields: [folderid], references: [id], onDelete: Cascade)

  @@map("notes")
}

model RevokedToken {
  id        Int      @id @default(autoincrement())
  createdAT DateTime @default(now())

  token     String   @unique
  revokedAT Int

  @@map("revokedtokens")
}
